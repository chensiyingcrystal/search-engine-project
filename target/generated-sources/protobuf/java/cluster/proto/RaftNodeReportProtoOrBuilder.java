// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClusterHealthManagement.proto

package cluster.proto;

public interface RaftNodeReportProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.RaftNodeReportProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.proto.RaftNodeReportReasonProto reason = 1;</code>
   * @return The enum numeric value on the wire for reason.
   */
  int getReasonValue();
  /**
   * <code>.proto.RaftNodeReportReasonProto reason = 1;</code>
   * @return The reason.
   */
  cluster.proto.RaftNodeReportReasonProto getReason();

  /**
   * <code>string groupId = 2;</code>
   * @return The groupId.
   */
  java.lang.String getGroupId();
  /**
   * <code>string groupId = 2;</code>
   * @return The bytes for groupId.
   */
  com.google.protobuf.ByteString
      getGroupIdBytes();

  /**
   * <code>.proto.RaftEndpointProto endpoint = 3;</code>
   * @return Whether the endpoint field is set.
   */
  boolean hasEndpoint();
  /**
   * <code>.proto.RaftEndpointProto endpoint = 3;</code>
   * @return The endpoint.
   */
  cluster.proto.RaftEndpointProto getEndpoint();
  /**
   * <code>.proto.RaftEndpointProto endpoint = 3;</code>
   */
  cluster.proto.RaftEndpointProtoOrBuilder getEndpointOrBuilder();

  /**
   * <code>.proto.RaftGroupMembersProto initialMembers = 4;</code>
   * @return Whether the initialMembers field is set.
   */
  boolean hasInitialMembers();
  /**
   * <code>.proto.RaftGroupMembersProto initialMembers = 4;</code>
   * @return The initialMembers.
   */
  cluster.proto.RaftGroupMembersProto getInitialMembers();
  /**
   * <code>.proto.RaftGroupMembersProto initialMembers = 4;</code>
   */
  cluster.proto.RaftGroupMembersProtoOrBuilder getInitialMembersOrBuilder();

  /**
   * <code>.proto.RaftGroupMembersProto committedMembers = 5;</code>
   * @return Whether the committedMembers field is set.
   */
  boolean hasCommittedMembers();
  /**
   * <code>.proto.RaftGroupMembersProto committedMembers = 5;</code>
   * @return The committedMembers.
   */
  cluster.proto.RaftGroupMembersProto getCommittedMembers();
  /**
   * <code>.proto.RaftGroupMembersProto committedMembers = 5;</code>
   */
  cluster.proto.RaftGroupMembersProtoOrBuilder getCommittedMembersOrBuilder();

  /**
   * <code>.proto.RaftGroupMembersProto effectiveMembers = 6;</code>
   * @return Whether the effectiveMembers field is set.
   */
  boolean hasEffectiveMembers();
  /**
   * <code>.proto.RaftGroupMembersProto effectiveMembers = 6;</code>
   * @return The effectiveMembers.
   */
  cluster.proto.RaftGroupMembersProto getEffectiveMembers();
  /**
   * <code>.proto.RaftGroupMembersProto effectiveMembers = 6;</code>
   */
  cluster.proto.RaftGroupMembersProtoOrBuilder getEffectiveMembersOrBuilder();

  /**
   * <code>.proto.RaftRoleProto role = 7;</code>
   * @return The enum numeric value on the wire for role.
   */
  int getRoleValue();
  /**
   * <code>.proto.RaftRoleProto role = 7;</code>
   * @return The role.
   */
  cluster.proto.RaftRoleProto getRole();

  /**
   * <code>.proto.RaftNodeStatusProto status = 8;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.proto.RaftNodeStatusProto status = 8;</code>
   * @return The status.
   */
  cluster.proto.RaftNodeStatusProto getStatus();

  /**
   * <code>.proto.RaftTermProto term = 9;</code>
   * @return Whether the term field is set.
   */
  boolean hasTerm();
  /**
   * <code>.proto.RaftTermProto term = 9;</code>
   * @return The term.
   */
  cluster.proto.RaftTermProto getTerm();
  /**
   * <code>.proto.RaftTermProto term = 9;</code>
   */
  cluster.proto.RaftTermProtoOrBuilder getTermOrBuilder();

  /**
   * <code>.proto.RaftLogStatsProto log = 10;</code>
   * @return Whether the log field is set.
   */
  boolean hasLog();
  /**
   * <code>.proto.RaftLogStatsProto log = 10;</code>
   * @return The log.
   */
  cluster.proto.RaftLogStatsProto getLog();
  /**
   * <code>.proto.RaftLogStatsProto log = 10;</code>
   */
  cluster.proto.RaftLogStatsProtoOrBuilder getLogOrBuilder();
}
